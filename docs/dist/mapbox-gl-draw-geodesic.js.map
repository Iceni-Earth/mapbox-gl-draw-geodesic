{"version":3,"file":"mapbox-gl-draw-geodesic.js","sources":["../node_modules/@mapbox/mapbox-gl-draw/src/constants.js","../src/constants.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@mapbox/mapbox-gl-draw/src/lib/create_vertex.js","../node_modules/hat/index.js","../src/utils/circle_geojson.js","../node_modules/arc/arc.js","../node_modules/arc/index.js","../src/utils/create_geodesic_line.js","../src/utils/create_geodesic_midpoint.js","../node_modules/circle-to-polygon/index.js","../src/utils/create_geodesic_circle.js","../src/utils/create_geodesic_geojson.js","../src/modes/draw_line_string_geodesic.js","../src/modes/draw_polygon_geodesic.js","../node_modules/@mapbox/mapbox-gl-draw/src/lib/common_selectors.js","../node_modules/@mapbox/mapbox-gl-draw/src/lib/double_click_zoom.js","../node_modules/haversine-js/index.js","../src/utils/distance.js","../src/utils/drag_pan.js","../src/modes/draw_circle_geodesic.js","../src/modes/draw_point_geodesic.js","../src/modes/simple_select_geodesic.js","../src/modes/direct_select_geodesic.js","../src/modes/static_geodesic.js","../src/modes/index.js"],"sourcesContent":["export const classes = {\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select',\n  STATIC: 'static'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n","export const modes = {\n    DRAW_CIRCLE: 'draw_circle'\n};\n\nexport const properties = {\n    CIRCLE_RADIUS: 'circleRadius'\n};","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import * as Constants from '../constants';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n","var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n","import * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport hat from 'hat';\nimport * as ConstantsGeodesic from '../constants';\n\nexport function createCircle(center, radius, properties = {}) {\n  if (!(radius > 0)) {\n    throw new Error('Radius has to be greater then 0');\n  }\n\n  return {\n    id: hat(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      [ConstantsGeodesic.properties.CIRCLE_RADIUS]: radius, // km\n      ...properties\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[center, center, center, center, center]] // four handles (NSEW)\n    }\n  };\n}\n\nexport function isCircle(geojson) {\n  return geojson.geometry.type === Constants.geojsonTypes.POLYGON &&\n    typeof geojson.properties[ConstantsGeodesic.properties.CIRCLE_RADIUS] === 'number' &&\n    geojson.properties[ConstantsGeodesic.properties.CIRCLE_RADIUS] > 0;\n}\n\nexport function getCircleCenter(geojson) {\n  if (!isCircle(geojson)) {\n    throw new Error('GeoJSON is not a circle');\n  }\n\n  return geojson.geometry.coordinates[0][0];\n}\n\nexport function setCircleCenter(geojson, center) {\n  if (!isCircle(geojson)) {\n    throw new Error('GeoJSON is not a circle');\n  }\n\n  geojson.geometry.coordinates = [[center, center, center, center, center]]; // four handles (NSEW)\n}\n\nexport function getCircleRadius(geojson) {\n  if (!isCircle(geojson)) {\n    throw new Error('GeoJSON is not a circle');\n  }\n\n  return geojson.properties[ConstantsGeodesic.properties.CIRCLE_RADIUS];\n}\n\nexport function setCircleRadius(geojson, radius) {\n  if (!isCircle(geojson)) {\n    throw new Error('GeoJSON is not a circle');\n  }\n\n  geojson.properties[ConstantsGeodesic.properties.CIRCLE_RADIUS] = radius;\n}","'use strict';\n\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function(lon,lat) {\n    this.lon = lon;\n    this.lat = lat;\n    this.x = D2R * lon;\n    this.y = D2R * lat;\n};\n\nCoord.prototype.view = function() {\n    return String(this.lon).slice(0, 4) + ',' + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function() {\n    var anti_lat = -1 * this.lat;\n    var anti_lon = (this.lon < 0) ? 180 + this.lon : (180 - this.lon) * -1;\n    return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function() {\n    this.coords = [];\n    this.length = 0;\n};\n\nLineString.prototype.move_to = function(coord) {\n    this.length++;\n    this.coords.push(coord);\n};\n\nvar Arc = function(properties) {\n    this.properties = properties || {};\n    this.geometries = [];\n};\n\nArc.prototype.json = function() {\n    if (this.geometries.length <= 0) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': null },\n                'type': 'Feature', 'properties': this.properties\n               };\n    } else if (this.geometries.length == 1) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': this.geometries[0].coords },\n                'type': 'Feature', 'properties': this.properties\n               };\n    } else {\n        var multiline = [];\n        for (var i = 0; i < this.geometries.length; i++) {\n            multiline.push(this.geometries[i].coords);\n        }\n        return {'geometry': { 'type': 'MultiLineString', 'coordinates': multiline },\n                'type': 'Feature', 'properties': this.properties\n               };\n    }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function() {\n    var wkt_string = '';\n    var wkt = 'LINESTRING(';\n    var collect = function(c) { wkt += c[0] + ' ' + c[1] + ','; };\n    for (var i = 0; i < this.geometries.length; i++) {\n        if (this.geometries[i].coords.length === 0) {\n            return 'LINESTRING(empty)';\n        } else {\n            var coords = this.geometries[i].coords;\n            coords.forEach(collect);\n            wkt_string += wkt.substring(0, wkt.length - 1) + ')';\n        }\n    }\n    return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function(start,end,properties) {\n    if (!start || start.x === undefined || start.y === undefined) {\n        throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n    }\n    if (!end || end.x === undefined || end.y === undefined) {\n        throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n    }\n    this.start = new Coord(start.x,start.y);\n    this.end = new Coord(end.x,end.y);\n    this.properties = properties || {};\n\n    var w = this.start.x - this.end.x;\n    var h = this.start.y - this.end.y;\n    var z = Math.pow(Math.sin(h / 2.0), 2) +\n                Math.cos(this.start.y) *\n                   Math.cos(this.end.y) *\n                     Math.pow(Math.sin(w / 2.0), 2);\n    this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n    if (this.g == Math.PI) {\n        throw new Error('it appears ' + start.view() + ' and ' + end.view() + \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");\n    } else if (isNaN(this.g)) {\n        throw new Error('could not calculate great circle between ' + start + ' and ' + end);\n    }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function(f) {\n    var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n    var B = Math.sin(f * this.g) / Math.sin(this.g);\n    var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n    var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n    var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n    var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n    var lon = R2D * Math.atan2(y, x);\n    return [lon, lat];\n};\n\n\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function(npoints,options) {\n    var first_pass = [];\n    if (!npoints || npoints <= 2) {\n        first_pass.push([this.start.lon, this.start.lat]);\n        first_pass.push([this.end.lon, this.end.lat]);\n    } else {\n        var delta = 1.0 / (npoints - 1);\n        for (var i = 0; i < npoints; ++i) {\n            var step = delta * i;\n            var pair = this.interpolate(step);\n            first_pass.push(pair);\n        }\n    }\n    /* partial port of dateline handling from:\n      gdal/ogr/ogrgeometryfactory.cpp\n\n      TODO - does not handle all wrapping scenarios yet\n    */\n    var bHasBigDiff = false;\n    var dfMaxSmallDiffLong = 0;\n    // from http://www.gdal.org/ogr2ogr.html\n    // -datelineoffset:\n    // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n    var dfDateLineOffset = options && options.offset ? options.offset : 10;\n    var dfLeftBorderX = 180 - dfDateLineOffset;\n    var dfRightBorderX = -180 + dfDateLineOffset;\n    var dfDiffSpace = 360 - dfDateLineOffset;\n\n    // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n    for (var j = 1; j < first_pass.length; ++j) {\n        var dfPrevX = first_pass[j-1][0];\n        var dfX = first_pass[j][0];\n        var dfDiffLong = Math.abs(dfX - dfPrevX);\n        if (dfDiffLong > dfDiffSpace &&\n            ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) || (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))) {\n            bHasBigDiff = true;\n        } else if (dfDiffLong > dfMaxSmallDiffLong) {\n            dfMaxSmallDiffLong = dfDiffLong;\n        }\n    }\n\n    var poMulti = [];\n    if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n        var poNewLS = [];\n        poMulti.push(poNewLS);\n        for (var k = 0; k < first_pass.length; ++k) {\n            var dfX0 = parseFloat(first_pass[k][0]);\n            if (k > 0 &&  Math.abs(dfX0 - first_pass[k-1][0]) > dfDiffSpace) {\n                var dfX1 = parseFloat(first_pass[k-1][0]);\n                var dfY1 = parseFloat(first_pass[k-1][1]);\n                var dfX2 = parseFloat(first_pass[k][0]);\n                var dfY2 = parseFloat(first_pass[k][1]);\n                if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 == 180 &&\n                    k+1 < first_pass.length &&\n                   first_pass[k-1][0] > -180 && first_pass[k-1][0] < dfRightBorderX)\n                {\n                     poNewLS.push([-180, first_pass[k][1]]);\n                     k++;\n                     poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                     continue;\n                } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 == -180 &&\n                     k+1 < first_pass.length &&\n                     first_pass[k-1][0] > dfLeftBorderX && first_pass[k-1][0] < 180)\n                {\n                     poNewLS.push([180, first_pass[k][1]]);\n                     k++;\n                     poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                     continue;\n                }\n\n                if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX)\n                {\n                    // swap dfX1, dfX2\n                    var tmpX = dfX1;\n                    dfX1 = dfX2;\n                    dfX2 = tmpX;\n                    // swap dfY1, dfY2\n                    var tmpY = dfY1;\n                    dfY1 = dfY2;\n                    dfY2 = tmpY;\n                }\n                if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n                    dfX2 += 360;\n                }\n\n                if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2)\n                {\n                    var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n                    var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n                    poNewLS.push([first_pass[k-1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n                    poNewLS = [];\n                    poNewLS.push([first_pass[k-1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n                    poMulti.push(poNewLS);\n                }\n                else\n                {\n                    poNewLS = [];\n                    poMulti.push(poNewLS);\n                }\n                poNewLS.push([dfX0, first_pass[k][1]]);\n            } else {\n                poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n            }\n        }\n    } else {\n        // add normally\n        var poNewLS0 = [];\n        poMulti.push(poNewLS0);\n        for (var l = 0; l < first_pass.length; ++l) {\n            poNewLS0.push([first_pass[l][0],first_pass[l][1]]);\n        }\n    }\n\n    var arc = new Arc(this.properties);\n    for (var m = 0; m < poMulti.length; ++m) {\n        var line = new LineString();\n        arc.geometries.push(line);\n        var points = poMulti[m];\n        for (var j0 = 0; j0 < points.length; ++j0) {\n            line.move_to(points[j0]);\n        }\n    }\n    return arc;\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  // nodejs\n  module.exports.Coord = Coord;\n  module.exports.Arc = Arc;\n  module.exports.GreatCircle = GreatCircle;\n\n} else {\n  // browser\n  var arc = {};\n  arc.Coord = Coord;\n  arc.Arc = Arc;\n  arc.GreatCircle = GreatCircle;\n}\n","module.exports = require('./arc');\n","import * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport arc from 'arc';\n\nfunction coordinatesEqual(x, y) {\n  return x[0] === y[0] && x[1] === y[1];\n}\n\nfunction coordinatePairs(array) {\n  return array.slice(0, -1)\n    .map((value, index) => [value, array[index + 1]])\n    .filter(pair => !coordinatesEqual(pair[0], pair[1]));\n}\n  \nfunction createGeodesicLine(coordinates, steps = 32) {\n  const segments = coordinatePairs(coordinates);\n\n  const geodesicSegments = segments.map(segment => {\n    const greatCircle = new arc.GreatCircle(\n      { x: segment[0][0], y: segment[0][1] },\n      { x: segment[1][0], y: segment[1][1] }\n    );\n    return greatCircle.Arc(steps, { offset: 90 }).json();\n  });\n\n  // arc.js returns the line crossing antimeridian split into two MultiLineString segments\n  // (the first going towards to antimeridian, the second going away from antimeridian, both in range -180..180 longitude)\n  // fix Mapbox rendering by merging them together, adding 360 to longitudes on the right side\n  let crossed = false;\n  const geodesicCoordinates = geodesicSegments.map(geodesicSegment => {\n    if (geodesicSegment.geometry.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      crossed = !crossed;\n      const direction = geodesicSegment.geometry.coordinates[0][0][0] > geodesicSegment.geometry.coordinates[1][0][0];\n      return [\n        ...geodesicSegment.geometry.coordinates[0].map(x => [x[0] + (direction ? 0 : 360), x[1]]),\n        ...geodesicSegment.geometry.coordinates[1].map(x => [x[0] + (direction ? 360 : 0), x[1]])\n      ];\n    } else {\n      return geodesicSegment.geometry.coordinates.map(x => [x[0] + (crossed ? 360 : 0), x[1]]);\n    }\n  }).flat();\n\n  return geodesicCoordinates.filter((coord, index) => index === geodesicCoordinates.length - 1 || !coordinatesEqual(coord, geodesicCoordinates[index + 1]));;\n};\n\nexport default createGeodesicLine;","function toRadians(value) {\n  return value / 180 * Math.PI;\n}\n\nfunction toDegrees(value) {\n  return value / Math.PI * 180;\n}\n\n// copied from https://stackoverflow.com/questions/57675924/calculated-midpoint-on-map-doesnt-overlap-with-geodesic-polyline\n// see also https://www.movable-type.co.uk/scripts/latlong.html\nfunction getGeodesicMidpoint(startCoord, endCoord) {\n  const deltaLongitude = toRadians(endCoord[0] - startCoord[0]);\n  const latitude1 = toRadians(startCoord[1]);\n  const latitude2 = toRadians(endCoord[1]);\n  const longitude1 = toRadians(startCoord[0]);\n\n  const Bx = Math.cos(latitude2) * Math.cos(deltaLongitude);\n  const By = Math.cos(latitude2) * Math.sin(deltaLongitude);\n\n  const latitude = Math.atan2(\n    Math.sin(latitude1) + Math.sin(latitude2),\n    Math.sqrt((Math.cos(latitude1) + Bx) * (Math.cos(latitude1) + Bx) + By * By)\n  );\n  const longitude = longitude1 + Math.atan2(By, Math.cos(latitude1) + Bx);\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n};\n\nexport default getGeodesicMidpoint;","\"use strict\";\nfunction toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\nfunction toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\nfunction offset(c1, distance, bearing) {\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / 6378137; // distance divided by 6378137 (radius of the earth) wgs84\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  var lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\nfunction validateCenter(center) {\n  const validCenterLengths = [2, 3];\n  if (!Array.isArray(center) || !validCenterLengths.includes(center.length)) {\n    throw new Error(\"ERROR! Center has to be an array of length two or three\");\n  }\n  const [lng, lat] = center;\n  if (typeof lng !== \"number\" || typeof lat !== \"number\") {\n    throw new Error(\n      `ERROR! Longitude and Latitude has to be numbers but where ${typeof lng} and ${typeof lat}`\n    );\n  }\n  if (lng > 180 || lng < -180) {\n    throw new Error(\n      `ERROR! Longitude has to be between -180 and 180 but was ${lng}`\n    );\n  }\n\n  if (lat > 90 || lat < -90) {\n    throw new Error(\n      `ERROR! Latitude has to be between -90 and 90 but was ${lat}`\n    );\n  }\n}\n\nfunction validateRadius(radius) {\n  if (typeof radius !== \"number\") {\n    throw new Error(\n      `ERROR! Radius has to be a positive number but was: ${typeof radius}`\n    );\n  }\n\n  if (radius <= 0) {\n    throw new Error(\n      `ERROR! Radius has to be a positive number but was: ${radius}`\n    );\n  }\n}\n\nfunction validateNumberOfSegments(numberOfSegments) {\n  if (typeof numberOfSegments !== \"number\" && numberOfSegments !== undefined) {\n    throw new Error(\n      `ERROR! Number of segments has to be a number but was: ${typeof numberOfSegments}`\n    );\n  }\n\n  if (numberOfSegments < 3) {\n    throw new Error(\n      `ERROR! Number of segments has to be at least 3 but was: ${numberOfSegments}`\n    );\n  }\n}\n\nfunction validateInput({ center, radius, numberOfSegments }) {\n  validateCenter(center);\n  validateRadius(radius);\n  validateNumberOfSegments(numberOfSegments);\n}\n\nmodule.exports = function circleToPolygon(center, radius, numberOfSegments) {\n  var n = numberOfSegments ? numberOfSegments : 32;\n\n  // validateInput() throws error on invalid input and do nothing on valid input\n  validateInput({ center, radius, numberOfSegments });\n\n  var coordinates = [];\n  for (var i = 0; i < n; ++i) {\n    coordinates.push(offset(center, radius, (2 * Math.PI * -i) / n));\n  }\n  coordinates.push(coordinates[0]);\n\n  return {\n    type: \"Polygon\",\n    coordinates: [coordinates]\n  };\n};\n","import circleToPolygon from 'circle-to-polygon';\n\nfunction createGeodesicCircle(center, radius, steps) {\n  // circleToPolygon expects center in -180..180\n  const shiftedCenter = [((center[0] + 180) % 360 + 360) % 360 - 180, center[1]];\n  const shiftedPolygon = circleToPolygon(shiftedCenter, radius * 1000, steps);\n  const coordinates = shiftedPolygon.coordinates[0].map(x => [x[0] + (center[0] - shiftedCenter[0]), x[1]]);\n  return coordinates;\n}\n\nexport default createGeodesicCircle;","import * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport createVertex from '@mapbox/mapbox-gl-draw/src/lib/create_vertex';\nimport { isCircle, getCircleCenter, getCircleRadius } from './circle_geojson';\nimport createGeodesicLine from './create_geodesic_line';\nimport createGeodesicMidpoint from './create_geodesic_midpoint';\nimport createGeodesicCircle from './create_geodesic_circle';\n\nconst STEPS = 32;\n\nfunction minBy(array, func) {\n  const min = Math.min(...array.map(func));\n  return array.find(item => func(item) === min);\n}\n\nfunction maxBy(array, func) {\n  const max = Math.max(...array.map(func));\n  return array.find(item => func(item) === max);\n}\n\nfunction getCoordinate(coordinates, path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const coordinate = ids.reduce((coordinates, id) => coordinates[id], coordinates);\n  return JSON.parse(JSON.stringify(coordinate));\n}\n\nfunction createGeodesicGeojson(geojson, options) {\n  options = { steps: STEPS, ...options };\n\n  const properties = geojson.properties;\n  const type = geojson.geometry.type;\n  const coordinates = geojson.geometry.coordinates;\n\n  const featureId = properties.parent || properties.id;\n  const featureGeojson = options.ctx.store.get(featureId).toGeoJSON();\n\n  if (type === Constants.geojsonTypes.POINT) {\n    if ((properties.meta === Constants.meta.VERTEX || properties.meta === Constants.meta.MIDPOINT) && featureGeojson && isCircle(featureGeojson)) {\n      return []; // hide circle points, they are displayed in processCircle instead\n    } else if (properties.meta === Constants.meta.MIDPOINT) {\n      return processMidpoint(); // calculate geodesic midpoint\n    } else {\n      return [geojson]; // pass point as is\n    }\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    return processLine(); // calculate geodesic line\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    if (featureGeojson && isCircle(featureGeojson)) {\n      return processCircle(); // calculate geodesic circle\n    } else {\n      return processPolygon(); // calculate geodesic polygon\n    }\n  } else /* istanbul ignore else */ if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    return processMultiGeometry(); \n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) {\n      return false;\n    }\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  function processMidpoint() {\n    const coordPath = properties.coord_path;\n\n    // subtract 1 from the last coord path id\n    const coordPathIds = coordPath.split('.').map(x => parseInt(x, 10));\n    const startCoordPath = coordPathIds.map((x, i) => x + (i === coordPathIds.length - 1 ? -1 : 0)).join('.');\n    const endCoordPath = coordPath;\n\n    const startCoord = getCoordinate(featureGeojson.geometry.coordinates, startCoordPath);\n    const endCoord = getCoordinate(featureGeojson.geometry.coordinates, endCoordPath);\n    const midCoord = createGeodesicMidpoint(startCoord, endCoord);\n\n    const geodesicGeojson = {\n      ...geojson,\n      properties: {\n        ...properties,\n        lng: midCoord[0],\n        lat: midCoord[1]\n      },\n      geometry: {\n        ...geojson.geometry,\n        coordinates: midCoord\n      },\n    };\n    return [geodesicGeojson];\n  }\n\n  function processLine() {\n    const geodesicCoordinates = createGeodesicLine(coordinates, options.steps);\n    const geodesicGeojson = {\n      ...geojson,\n      geometry: {\n        ...geojson.geometry,\n        coordinates: geodesicCoordinates\n      }\n    };\n    return [geodesicGeojson];\n  }\n\n  function processPolygon() {\n    const geodesicCoordinates = coordinates.map((subCoordinates) => {\n      return createGeodesicLine(subCoordinates);\n    });\n    const geodesicGeojson = {\n      ...geojson,\n      geometry: {\n        ...geojson.geometry,\n        coordinates: geodesicCoordinates\n      }\n    };\n    return [geodesicGeojson];\n  }\n\n  function processCircle() {\n    const center = getCircleCenter(featureGeojson);\n    const radius = getCircleRadius(featureGeojson);\n    const geodesicCoordinates = createGeodesicCircle(center, radius, options.steps * 4);\n    const geodesicGeojson = {\n      ...geojson,\n      geometry: {\n        ...geojson.geometry,\n        coordinates: [geodesicCoordinates]\n      }\n    };\n\n    // circle handles\n    if (properties.active === Constants.activeStates.ACTIVE) {\n      const points = [\n        maxBy(geodesicCoordinates, x => x[0]), // north\n        minBy(geodesicCoordinates, x => x[0]), // south\n        maxBy(geodesicCoordinates, x => x[1]), // east\n        minBy(geodesicCoordinates, x => x[1])  // west\n      ];\n      const vertices = points.map((point, i) => {\n        return createVertex(properties.id, point, `0.${i}`, isSelectedPath(`0.${i}`));\n      })\n  \n      return [geodesicGeojson, ...vertices];\n    } else {\n      return [geodesicGeojson];\n    }\n  }\n\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\n    const geodesicFeatures = coordinates.map((subCoordinates) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates\n        }\n      };\n      return createGeodesicGeojson(subFeature, options);\n    }).flat();\n    const geodesicCoordinates = geodesicFeatures.map((subFeature) => {\n      return subFeature.geometry.coordinates;\n    });\n    const geodesicGeojson = {\n      ...geojson,\n      geometry: {\n        ...geojson.geometry,\n        coordinates: geodesicCoordinates\n      }\n    };\n    return [geodesicGeojson];\n  }\n}\n\nexport default createGeodesicGeojson;","import MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport createGeodesicFeature from '../utils/create_geodesic_geojson';\n\nconst DrawLineString = MapboxDraw.modes[Constants.modes.DRAW_LINE_STRING];\n\nconst DrawLineStringGeodesic = { ...DrawLineString };\n\nDrawLineStringGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicFeature(geojson, { ctx: this._ctx });\n    geodesicGeojson.forEach(display);\n  };\n\n  DrawLineString.toDisplayFeatures.call(this, state, geojson, displayGeodesic);\n};\n\nexport default DrawLineStringGeodesic;","import MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport createGeodesicGeojson from '../utils/create_geodesic_geojson';\n\nconst DrawPolygon = MapboxDraw.modes[Constants.modes.DRAW_POLYGON];\n\nconst DrawPolygonGeodesic = { ...DrawPolygon };\n\nDrawPolygonGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicGeojson(geojson, { ctx: this._ctx });\n    geodesicGeojson.forEach(display);\n  };\n  \n  DrawPolygon.toDisplayFeatures.call(this, state, geojson, displayGeodesic);\n};\n\nexport default DrawPolygonGeodesic;","import * as Constants from '../constants';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n","export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n","'use strict';\r\n\r\nmodule.exports = haversine;\r\n\r\nconst earth = {\r\n  MILE: 3959,\r\n  KM: 6371,\r\n  M: 6371000,\r\n  NMI: 3440\r\n};\r\n\r\nhaversine.EARTH = earth;\r\n\r\nfunction haversine(start, end, options) {\r\n  options = defaults(options);\r\n\r\n  const startLatitude = getRadians(start.latitude, options.isRadians);\r\n  const endLatitude = getRadians(end.latitude, options.isRadians);\r\n  const longitudeDelta = coordinateDifference(start.longitude, end.longitude, options.isRadians);\r\n\r\n  const c = Math.acos(Math.sin(startLatitude) * Math.sin(endLatitude) + Math.cos(startLatitude) * Math.cos(endLatitude) * Math.cos(longitudeDelta));\r\n\r\n  return options.radius * c;\r\n}\r\n\r\nfunction coordinateDifference(a, b, isRadians) {\r\n  const delta = b - a;\r\n  return getRadians(delta, isRadians);\r\n}\r\n\r\nfunction getRadians(input, isRadians) {\r\n  return isRadians ? input : (input * (Math.PI / 180));\r\n}\r\n\r\nfunction defaults(options) {\r\n  options = options || {};\r\n  options.radius = options.radius || earth.MILE;\r\n  options.isRadians = (typeof options.isRadians === 'boolean') ? options.isRadians : false;\r\n\r\n  return options;\r\n}\r\n","import haversine from 'haversine-js';\n\nfunction distance(start, end) {\n  return haversine(\n    { latitude: start[1], longitude: start[0] },\n    { latitude: end[1], longitude: end[0] },\n    { radius: haversine.EARTH.KM }\n  );\n}\n\nexport default distance;","const dragPan = {\n    enable(ctx) {\n        setTimeout(() => {\n            // First check we've got a map and some context.\n            if (!ctx.map || !ctx.map.dragPan || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n            // Now check initial state wasn't false (we leave it disabled if so)\n            if (!ctx._ctx.store.getInitialConfigValue('dragPan')) return;\n            ctx.map.dragPan.enable();\n        }, 0);\n    },\n    disable(ctx) {\n        setTimeout(() => {\n            if (!ctx.map || !ctx.map.doubleClickZoom) return;\n            // Always disable here, as it's necessary in some cases.\n            ctx.map.dragPan.disable();\n        }, 0);\n    },\n};\n\nexport default dragPan;","import * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport * as CommonSelectors from '@mapbox/mapbox-gl-draw/src/lib/common_selectors';\nimport doubleClickZoom from '@mapbox/mapbox-gl-draw/src/lib/double_click_zoom';\nimport * as ConstantsGeodesic from '../constants';\nimport { createCircle, getCircleCenter } from '../utils/circle_geojson';\nimport distance from '../utils/distance';\nimport createGeodesicGeojson from '../utils/create_geodesic_geojson';\nimport dragPan from '../utils/drag_pan';\n\nconst DrawCircleGeodesic = {};\n\nDrawCircleGeodesic.onSetup = function(opts) {\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  dragPan.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.setActionableState(); // default actionable state is false for all actions\n  return {};\n};\n\nDrawCircleGeodesic.onMouseDown = DrawCircleGeodesic.onTouchStart = function(state, e) {\n  const center = [e.lngLat.lng, e.lngLat.lat];\n  const circle = this.newFeature(createCircle(center, Number.EPSILON));\n  this.addFeature(circle);\n  state.circle = circle;\n};\n\nDrawCircleGeodesic.onDrag = DrawCircleGeodesic.onTouchMove = function(state, e) {\n  const point = [e.lngLat.lng, e.lngLat.lat];\n\n  if (state.circle) {\n    const geojson = state.circle.toGeoJSON();\n    const center = getCircleCenter(geojson);\n    const radius = distance(center, point);\n    state.circle.setProperty(ConstantsGeodesic.properties.CIRCLE_RADIUS, radius);\n    state.circle.changed();\n  }\n};\n\nDrawCircleGeodesic.onMouseUp = DrawCircleGeodesic.onTouchEnd = function(state, e) {\n  this.map.fire(Constants.events.CREATE, { features: [state.circle.toGeoJSON()] });\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.circle.id] });\n};\n\nDrawCircleGeodesic.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    if (state.circle) {\n      this.deleteFeature([state.circle.id], { silent: true });\n    }\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.circle.id] });\n  }\n};\n\nDrawCircleGeodesic.onStop = function() {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  dragPan.enable(this);\n  this.activateUIButton();\n}\n\nDrawCircleGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  if (state.circle) {\n    const isActivePolygon = geojson.properties.id === state.circle.id;\n    geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  }\n\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicGeojson(geojson, { ctx: this._ctx });\n    geodesicGeojson.forEach(display);\n  };\n\n  displayGeodesic(geojson);\n};\n\nexport default DrawCircleGeodesic;","import MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport createGeodesicGeojson from '../utils/create_geodesic_geojson';\n\nconst DrawPoint = MapboxDraw.modes[Constants.modes.DRAW_POINT];\n\nconst DrawPointGeodesic = { ...DrawPoint };\n\nDrawPointGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicGeojson(geojson, { ctx: this._ctx });\n    geodesicGeojson.forEach(display);\n  };\n\n  DrawPoint.toDisplayFeatures.call(this, state, geojson, displayGeodesic);\n};\n\nexport default DrawPointGeodesic;","import MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport createGeodesicGeojson from '../utils/create_geodesic_geojson';\n\nconst SimpleSelect = MapboxDraw.modes[Constants.modes.SIMPLE_SELECT];\n\nconst SimpleSelectGeodesic = { ...SimpleSelect };\n\nSimpleSelectGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicGeojson(geojson, { ctx: this._ctx });\n    geodesicGeojson.forEach(display);\n  };\n\n  SimpleSelect.toDisplayFeatures.call(this, state, geojson, displayGeodesic);\n};\n\nexport default SimpleSelectGeodesic;","import MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport * as ConstantsGeodesic from '../constants';\nimport { isCircle, getCircleCenter } from '../utils/circle_geojson';\nimport distance from '../utils/distance';\nimport createGeodesicGeojson from '../utils/create_geodesic_geojson';\n\nconst DirectSelect = MapboxDraw.modes[Constants.modes.DIRECT_SELECT];\n\nconst DirectSelectGeodesic = { ...DirectSelect };\n\nDirectSelectGeodesic.dragVertex = function(state, e, delta) {\n  const point = [e.lngLat.lng, e.lngLat.lat];\n  const geojson = state.feature.toGeoJSON();\n\n  if (isCircle(geojson)) {\n    const center = getCircleCenter(geojson);\n    const radius = distance(center, point);\n    state.feature.setProperty(ConstantsGeodesic.properties.CIRCLE_RADIUS, radius);\n    state.feature.changed();\n  } else {\n    DirectSelect.dragVertex.call(this, state, e, delta);\n  }\n};\n\nDirectSelectGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicGeojson(geojson, { ctx: this._ctx, selectedPaths: state.selectedCoordPaths });\n    geodesicGeojson.forEach(display);\n  };\n  \n  DirectSelect.toDisplayFeatures.call(this, state, geojson, displayGeodesic);\n};\n\nexport default DirectSelectGeodesic;","import createGeodesicGeojson from '../utils/create_geodesic_geojson';\n\n// copied from https://github.com/mapbox/mapbox-gl-draw-static-mode\nconst StaticGeodesic = {};\n\nStaticGeodesic.onSetup = function() {\n  this.setActionableState(); // default actionable state is false for all actions\n  return {};\n};\n\nStaticGeodesic.toDisplayFeatures = function(state, geojson, display) {\n  const displayGeodesic = (geojson) => {\n    const geodesicGeojson = createGeodesicGeojson(geojson, { ctx: this._ctx });\n    geodesicGeojson.forEach(display);\n  };\n\n  displayGeodesic(geojson);\n};\n\nexport default StaticGeodesic;","\nimport * as Constants from '@mapbox/mapbox-gl-draw/src/constants';\nimport * as ConstantsGeodesic from '../constants';\nimport DrawLineStringGeodesic from './draw_line_string_geodesic';\nimport DrawPolygonGeodesic from './draw_polygon_geodesic';\nimport DrawCircleGeodesic from './draw_circle_geodesic';\nimport DrawPointGeodesic from './draw_point_geodesic';\nimport SimpleSelectGeodesic from './simple_select_geodesic';\nimport DirectSelectGeodesic from './direct_select_geodesic';\nimport StaticGeodesic from './static_geodesic';\n\nexport const modes = {\n    [Constants.modes.DRAW_LINE_STRING]: DrawLineStringGeodesic,\n    [Constants.modes.DRAW_POLYGON]: DrawPolygonGeodesic,\n    [ConstantsGeodesic.modes.DRAW_CIRCLE]: DrawCircleGeodesic,\n    [Constants.modes.DRAW_POINT]: DrawPointGeodesic,\n    [Constants.modes.SIMPLE_SELECT]: SimpleSelectGeodesic,\n    [Constants.modes.DIRECT_SELECT]: DirectSelectGeodesic,\n    [Constants.modes.STATIC]: StaticGeodesic,\n};"],"names":["cursors","ADD","MOVE","DRAG","POINTER","NONE","geojsonTypes","FEATURE","POLYGON","LINE_STRING","POINT","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","modes","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","STATIC","events","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","meta","MIDPOINT","VERTEX","activeStates","ACTIVE","INACTIVE","DRAW_CIRCLE","properties","CIRCLE_RADIUS","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","parentId","coordinates","path","selected","type","Constants","parent","coord_path","active","geometry","hat","module","bits","base","undefined","digits","Math","log","pow","i","Infinity","rem","floor","res","x","random","toString","b","parsed","parseInt","rack","expandBy","fn","data","iters","Error","id","hasOwnProperty","call","hats","get","set","createCircle","center","radius","ConstantsGeodesic","isCircle","geojson","getCircleCenter","setCircleCenter","getCircleRadius","setCircleRadius","D2R","PI","R2D","Coord","lon","lat","y","prototype","view","String","slice","antipode","anti_lat","anti_lon","LineString","coords","length","move_to","coord","push","Arc","geometries","json","multiline","wkt","wkt_string","collect","c","forEach","substring","GreatCircle","start","end","w","h","z","sin","cos","g","asin","sqrt","isNaN","interpolate","f","A","B","atan2","npoints","options","first_pass","delta","step","pair","bHasBigDiff","dfMaxSmallDiffLong","dfDateLineOffset","offset","dfLeftBorderX","dfRightBorderX","dfDiffSpace","j","dfPrevX","dfX","dfDiffLong","abs","poMulti","poNewLS","k","dfX0","parseFloat","dfX1","dfY1","dfX2","dfY2","tmpX","tmpY","dfRatio","dfY","poNewLS0","l","arc","m","line","points","j0","require$$0","coordinatesEqual","coordinatePairs","array","map","index","filter","createGeodesicLine","steps","segments","geodesicSegments","segment","greatCircle","crossed","geodesicCoordinates","geodesicSegment","direction","flat","toRadians","toDegrees","getGeodesicMidpoint","startCoord","endCoord","deltaLongitude","latitude1","latitude2","longitude1","Bx","By","latitude","longitude","angleInDegrees","angleInRadians","c1","distance","bearing","lat1","lon1","dByR","validateCenter","validCenterLengths","Array","isArray","includes","lng","validateRadius","validateNumberOfSegments","numberOfSegments","validateInput","circleToPolygon","n","createGeodesicCircle","shiftedCenter","shiftedPolygon","STEPS","minBy","func","min","find","item","maxBy","max","getCoordinate","ids","split","coordinate","reduce","JSON","parse","stringify","createGeodesicGeojson","featureId","featureGeojson","ctx","store","toGeoJSON","processMidpoint","processLine","processCircle","processPolygon","indexOf","processMultiGeometry","isSelectedPath","selectedPaths","coordPath","coordPathIds","startCoordPath","join","endCoordPath","midCoord","createGeodesicMidpoint","geodesicGeojson","subCoordinates","vertices","point","createVertex","subType","replace","geodesicFeatures","subFeature","DrawLineString","MapboxDraw","DrawLineStringGeodesic","toDisplayFeatures","state","display","displayGeodesic","createGeodesicFeature","_ctx","DrawPolygon","DrawPolygonGeodesic","isEscapeKey","e","keyCode","isEnterKey","enable","setTimeout","doubleClickZoom","getInitialConfigValue","disable","haversine","earth","MILE","KM","M","NMI","EARTH","defaults","startLatitude","getRadians","isRadians","endLatitude","longitudeDelta","coordinateDifference","acos","a","input","dragPan","DrawCircleGeodesic","onSetup","opts","clearSelectedFeatures","updateUIClasses","mouse","setActionableState","onMouseDown","onTouchStart","lngLat","circle","newFeature","Number","EPSILON","addFeature","onDrag","onTouchMove","setProperty","changed","onMouseUp","onTouchEnd","fire","features","changeMode","featureIds","onKeyUp","CommonSelectors","deleteFeature","silent","onStop","activateUIButton","isActivePolygon","DrawPoint","DrawPointGeodesic","SimpleSelect","SimpleSelectGeodesic","DirectSelect","DirectSelectGeodesic","dragVertex","feature","selectedCoordPaths","StaticGeodesic"],"mappings":"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"}